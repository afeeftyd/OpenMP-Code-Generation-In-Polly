bb2:
  %2 = load i32* %.istart0.3, align 4
  store i32 %2, i32* %i, align 4
  %3 = load i32* %.iend0.4, align 4
  store i32 %3, i32* %0, align 4
  br label %bb3
bb3:
  store i32 0, i32* %j, align 4
  br label %bb4
bb4:
  %4 = load i32* %j, align 4
  %5 = icmp sle i32 %4, 4999999
  br i1 %5, label %bb7, label %bb5
bb5:
  %6 = load i32* %i, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %i, align 4
  %8 = load i32* %i, align 4
  %9 = load i32* %0, align 4
  %10 = icmp slt i32 %8, %9
  %11 = zext i1 %10 to i8
  %toBool6 = icmp ne i8 %11, 0
  br i1 %toBool6, label %bb3, label %bb
bb7:
  %12 = load i32* %i, align 4
  %13 = load i32* %i, align 4
  %14 = getelementptr inbounds 
        [1024 x float]* 
	@A, i32 0, i32 %13
  %15 = load float* %14, align 4
  %16 = load i32* %j, align 4
  %17 = sitofp i32 %16 to float
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds 
        [1024 x float]*
       	@A, i32 0, i32 %12
  store float %18, float* %19, align 4
  %20 = load i32* %j, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %bb4
return:
  ret void
}
declare void @GOMP_parallel_end() nounwind
declare zeroext i8 
        @GOMP_loop_runtime_next(i32*, i32*)
       	nounwind
declare void @GOMP_loop_end_nowait() nounwind
