\contentsline {chapter}{ACKNOWLEDGEMENTS}{i}{chapter*.1}
\contentsline {chapter}{ABSTRACT}{iii}{chapter*.2}
\contentsline {chapter}{LIST OF FIGURES}{viii}{chapter*.4}
\contentsline {chapter}{ABBREVIATIONS}{ix}{chapter*.5}
\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.1}
\contentsline {section}{\numberline {1.1}Parallelism in programs}{1}{section.1.1}
\contentsline {subsection}{\numberline {1.1.1}Parallelism and locality}{1}{subsection.1.1.1}
\contentsline {subsection}{\numberline {1.1.2}Realizing parallelism}{2}{subsection.1.1.2}
\contentsline {section}{\numberline {1.2}Auto parallelization}{4}{section.1.2}
\contentsline {section}{\numberline {1.3}The polyhedral model}{5}{section.1.3}
\contentsline {section}{\numberline {1.4}LLVM}{6}{section.1.4}
\contentsline {section}{\numberline {1.5}Polly and OpenMP code generation}{6}{section.1.5}
\contentsline {section}{\numberline {1.6}Outline of report}{7}{section.1.6}
\contentsline {chapter}{\numberline {2}The Polyhedral Model}{8}{chapter.2}
\contentsline {section}{\numberline {2.1}Program transformations with polyhedral model}{8}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}Transformation for improving data locality}{9}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}Scalar expansion}{9}{subsection.2.1.2}
\contentsline {section}{\numberline {2.2}Polyhedral representation of programs}{10}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}Iteration domain}{11}{subsection.2.2.1}
\contentsline {subsection}{\numberline {2.2.2}Schedule}{13}{subsection.2.2.2}
\contentsline {subsection}{\numberline {2.2.3}Access function}{14}{subsection.2.2.3}
\contentsline {chapter}{\numberline {3}Polly - Polyhedral Optmizations in LLVM}{16}{chapter.3}
\contentsline {section}{\numberline {3.1}Introduction to LLVM}{16}{section.3.1}
\contentsline {section}{\numberline {3.2}Introduction to Polly}{16}{section.3.2}
\contentsline {section}{\numberline {3.3}Implementation}{18}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}LLVM-IR to polyhedral model}{19}{subsection.3.3.1}
\contentsline {subsubsection}{Region-based SCoP detection}{19}{section*.10}
\contentsline {subsubsection}{Semantic SCoPs}{20}{section*.11}
\contentsline {subsection}{\numberline {3.3.2}Polyhedral model}{23}{subsection.3.3.2}
\contentsline {subsubsection}{The integer set library}{23}{section*.14}
\contentsline {subsubsection}{Composable polyhedral transformations}{23}{section*.15}
\contentsline {subsubsection}{Export/Import}{24}{section*.16}
\contentsline {subsection}{\numberline {3.3.3}Polyhedral model to LLVM-IR}{24}{subsection.3.3.3}
\contentsline {subsubsection}{Detecting parallel loops}{24}{section*.17}
\contentsline {section}{\numberline {3.4}Related work}{25}{section.3.4}
\contentsline {chapter}{\numberline {4}OpenMP Code Generation in Polly}{26}{chapter.4}
\contentsline {section}{\numberline {4.1}Introduction}{26}{section.4.1}
\contentsline {section}{\numberline {4.2}Code generation pass in Polly}{26}{section.4.2}
\contentsline {section}{\numberline {4.3}Detecting parallelism in Polly}{27}{section.4.3}
\contentsline {section}{\numberline {4.4}Generating OpenMP library calls}{28}{section.4.4}
\contentsline {section}{\numberline {4.5}Support for inner loops}{32}{section.4.5}
\contentsline {section}{\numberline {4.6}Dealing with memory references}{33}{section.4.6}
\contentsline {subsection}{\numberline {4.6.1}Adding memory references}{33}{subsection.4.6.1}
\contentsline {subsection}{\numberline {4.6.2}Extracting memory references}{34}{subsection.4.6.2}
\contentsline {section}{\numberline {4.7}Enabling OpenMP code generation in Polly}{34}{section.4.7}
\contentsline {section}{\numberline {4.8}OpenMP testcases}{35}{section.4.8}
\contentsline {chapter}{\numberline {5}Testing With PolyBench}{36}{chapter.5}
\contentsline {section}{\numberline {5.1}PolyBench}{36}{section.5.1}
\contentsline {section}{\numberline {5.2}Experimental results}{36}{section.5.2}
\contentsline {chapter}{\numberline {6}Conclusion and Future Work}{40}{chapter.6}
\contentsline {section}{\numberline {6.1}Conclusion}{40}{section.6.1}
\contentsline {section}{\numberline {6.2}Support for memory access transformations in Polly}{40}{section.6.2}
\contentsline {section}{\numberline {6.3}Increasing coverage of Polly}{41}{section.6.3}
\contentsline {subsection}{\numberline {6.3.1}Increasing SCoP coverage}{41}{subsection.6.3.1}
\contentsline {subsection}{\numberline {6.3.2}Increasing the system coverage}{42}{subsection.6.3.2}
\contentsline {section}{\numberline {6.4}Integrating profile guided optimization into Polly}{42}{section.6.4}
\contentsline {chapter}{\numberline {A}Setting up the environment}{44}{appendix.A}
\contentsline {section}{\numberline {A.1}CLooG}{44}{section.A.1}
\contentsline {section}{\numberline {A.2}PoCC}{45}{section.A.2}
\contentsline {section}{\numberline {A.3}Scoplib}{45}{section.A.3}
\contentsline {section}{\numberline {A.4}Building LLVM with Polly}{46}{section.A.4}
\contentsline {chapter}{\numberline {B}Various Tools Used in Polyhedral Community}{47}{appendix.B}
\contentsline {section}{\numberline {B.1}ClooG}{47}{section.B.1}
\contentsline {section}{\numberline {B.2}PLUTO}{49}{section.B.2}
\contentsline {section}{\numberline {B.3}VisualPolylib}{50}{section.B.3}
